<!DOCTYPE html>
<html>

<head>
    #parse("./common/head.vm")
    <title>Welcome</title>
    <style>
        body {
            position: absolute;
            top: 0px;
            right: 0px;
            bottom: 0px;
            left: 0px;
            padding: 10px;
        }

        .terminal {
            height: 100%;
            position: relative;
            top: 40px;
            right: 0px;
            bottom: 0px;
            left: 0px;
            border: 1px solid #c1c1c1;
            border-radius: 5px;
            font-family: Consolas;
            padding: 5px;
            overflow: auto;
            word-break: keep-all;
            white-space: nowrap;
            font-weight: bold;
            font-size: 23px;
        }

        .titl {
            width: 100px;
        }

        .layui-inline {
            width: 200px;
        }

        .top {
            margin-top: 20px;
            width: 100%;
        }

        .echarts {
            margin: 0 auto;
            width: 90%;
            height: 300px;
        }

        #table {
            width: 100%;
        }
    </style>
    <script src="//echarts.baidu.com/dist/echarts.js"></script>
</head>
<body>
<form action="" class="layui-form" id="form">
    <div class="layui-inline">
        <label class="layui-form-label titl">是否开启监听</label>
        <div class="layui-input-block">
            <input type="checkbox" lay-filter="filter" id="monitor" lay-skin="switch" lay-text="开启|关闭">
        </div>
    </div>
</form>
##<div class="layui-container">
##    <div class="terminal"></div>
##</div>
<div class="top">
    <div class="echarts" id="echarts"></div>
</div>

<table class="layui-table" id="tab_monitor" lay-filter="tab_monitor"></table>
</body>
<script>
    function loadSuccess() {
        var ws, myEcharts;
        loadFirstEcharts();

        function loadFirstEcharts() {
            $.ajax({
                url: './getTop',
                type: 'POST',
                dataType: 'json',
                success: function (data) {
                    if (200 == data.code) {
                        if (data.data) {
                            var top = JSON.parse(data.data);
                            loadEcharts(top);
                        }
                    } else {
                        layer.alert(data.msg);
                    }
                },
                error: function (err) {
                    layer.alert("监控信息异常！");
                }
            });
        }

        table.render({
            id: 'tab_monitor',
            elem: '#tab_monitor',
            url: '/processList',
            // height: 'full-52',
            even: true,
            cols: [[
                {field: 'pid', title: '进程id', sort: true, width: '8%'},
                {field: 'USER', title: '所有者', width: '12%'},
                {field: 'PR', title: '优先级', width: '8%'},
                {field: 'NI', title: 'nice值', width: '8%'},
                {field: 'VIRT', title: '使用虚拟内存', width: '8%'},
                {field: 'RES', title: '使用物理内存', width: '8%'},
                {field: 'SHR', title: '共享内存', width: '8%'},
                {field: 'S', title: '进程状态', width: '8%'},
                {field: 'CPU', title: '占用CPU', width: '8%'},
                {field: 'MEM', title: '占用物理内存', width: '8%'},
                {field: 'TIME', title: '时间总计', width: '8%'},
                {field: 'COMMAND', title: '进程名称'}
            ]],
            loading: true,
            method: 'POST',
            response: {
                statusCode: 200
            },
            done: function (data) {
            }
        });

        function linkSocket(status) {
            if (!ws) {
                ws = new WebSocket(getSocketHost() + "/console/$userInfo/system");
            }
            if (status) {
                if (ws.readyState != 1 && ws.readyState != 0) {
                    ws = new WebSocket(getSocketHost() + "/console/$userInfo/system");
                }
                ws.onopen = function () {
                    ws.send('{"op": "top", "projectInfo":{}}');
                };
                ws.onmessage = function (data) {
                    try {
                        if (data.data) {
                            var top = JSON.parse(data.data);
                            if (top.top) {
                                loadEcharts(top);
                            }
                        }
                    } catch (e) {
                        return;
                    }
                };
                ws.onerror = function (ev) {
                };
            } else {
                ws.close();
            }
        }

        form.on('switch(filter)', function (data) {
            var check = data.elem.checked;
            if ('WebSocket' in window) {
                linkSocket(check);
            }
        })

        //加载病状图
        function loadEcharts(top) {
            if (!top) {
                return;
            }
            var cpu = top.cpu;
            var value = [];
            if (cpu) {
                info = {
                    name: 'cpu',
                    type: 'pie',
                    center: ['18%', '50%'],
                    radius: ['40%', '70%'],
                    data: cpu
                }
                value.push(info);
            }
            var memory = top.memory;
            if (memory) {
                info = {
                    name: '内存',
                    type: 'pie',
                    center: ['48%', '50%'],
                    radius: ['40%', '70%'],
                    data: memory
                }
                value.push(info);
            }
            var disk = top.disk;
            if (disk) {
                info = {
                    name: '磁盘',
                    type: 'pie',
                    center: ['78%', '50%'],
                    radius: ['40%', '70%'],
                    data: disk
                }
                value.push(info);
            }
            var option = {
                tooltip: {
                    trigger: 'item',
                    formatter: "{a} <br/>{b} : {c} ({d}%)"
                },
                series: value
            };
            if (!myEcharts) {
                myEcharts = echarts.init(document.getElementById('echarts'));
            }
            myEcharts.setOption(option);
        }

    }
</script>

</html>