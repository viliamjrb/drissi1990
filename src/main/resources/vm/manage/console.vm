<!DOCTYPE html>
<html>

<head>
    #parse("./common/head.vm")
    <title>项目管理系统</title>
    <link rel="stylesheet" href="/static/css/manage/console.css" media="all">
</head>

<body>
<div class="console">
    #if($manager)
        <div class="layui-row">
            <!-- layui-elem-quote -->
            #if($logSize)
                <button id="export" class="layui-btn layui-btn-sm">导出日志(<span id="logSize">$logSize</span>)</button>
            #end

            <a href="javascript:;" class="btn-op layui-btn  layui-btn-sm" op="start">启动</a>
            <a href="javascript:;" class="btn-op layui-btn  layui-btn-sm layui-btn-warm" op="restart">重启</a>
            <a href="javascript:;" class="btn-op layui-btn  layui-btn-sm layui-btn-danger" op="stop">停止</a>
            <div class="status">
                <div class="status-div"></div>
                <span></span>
            </div>
        </div>
    #end
    <div class="terminal"></div>
</div>
</body>
<script type="text/javascript">
    var projectInfo =  $projectInfo;
    var loopLog = false;
    var loopLogTime;

    function loadSuccess() {
        const showLogDom = $('.console .terminal');
        if ('WebSocket' in window) {
            const ws = new WebSocket("ws://" + window.location.host + "/console/$userInfo/" + projectInfo.id);
            ws.onopen = function () {
                showLogDom.append('WebSocket连接成功！<br/>');
                setMsg('status');
            };

            ws.onmessage = function (data) {
                // 如果是
                if (data.data.indexOf('{') === 0) {
                    layer.closeAll();
                    var json_data = null;
                    try {
                        json_data = JSON.parse(data.data);
                    } catch (e) {
                        showLogDom.append(data.data + '<br/>');
                        return;
                    }
                    if (json_data.code !== 200) {
                        layer.msg(json_data.msg);
                    }
                    var op = json_data.op;
                    switch (op) {
                        case 'status':
                        case 'start':
                        case 'restart':
                            if (200 === json_data.code) {
                                $('.status .status-div').removeClass('status-stop').addClass('status-run');
                                $('.status span').text('运行中');
                                setOpBtn(false);
                                // 运行后需要实时加载日志
                                setMsg("showlog");
                            } else {
                                $('.status .status-div').removeClass('status-run').addClass('status-stop');
                                $('.status span').text(json_data.msg);
                                setOpBtn(true);
                            }
                            break;
                        case 'stop':
                            if (200 === json_data.code) {
                                $('.status .status-div').removeClass('status-run').addClass('status-stop');
                                $('.status span').text('未运行');
                                setOpBtn(true);
                            } else {
                                $('.status span').text(json_data.msg);
                            }
                            break;
                        case  'showlog':
                            break;
                        default:
                            break;
                    }
                } else {
                    showLogDom.append(data.data + '<br/>');
                    if (!loopLog) {
                        loopLogAjax();
                    }
                }
                scrollToBotomm();
            };

            ws.onclose = function () {
                showLogDom.append('WebSocket连接已关闭！<br/>');
                clearInterval(loopLogTime);
                #if($manager)
                    // 如果有权限，自动重连
                    setTimeout(function () {
                        window.location.reload();
                    }, 1000);
                #end
            };

            $('.btn-op').on('click', function () {
                var op = $(this).attr('op');
                setMsg(op);
            });

            function setMsg(opt) {
                const data = {
                    op: opt,
                    projectInfo: projectInfo
                };
                layer.load(1, {
                    shade: [0.3, '#fff'] //0.1透明度的白色背景
                });
                ws.send(JSON.stringify(data));
                setTimeout(function () {
                    layer.closeAll();
                }, 2000);
            }
        } else {
            showLogDom.html('你的浏览器不支持WebSocket！');
        }

        function setOpBtn(flag) {
            if (flag) {
                $('.btn-op[op="start"]').show();
                $('.btn-op[op="stop"],.btn-op[op="restart"]').hide();
            } else {
                $('.btn-op[op="start"]').hide();
                $('.btn-op[op="stop"],.btn-op[op="restart"]').show();
            }
        }

        function scrollToBotomm() {
            var h = showLogDom[0].scrollHeight;
            showLogDom.scrollTop(h);
        }

        function loopLogAjax() {
            if (loopLog) {
                return;
            }
            #if($logSize)
                loopLog = true;
                loopLogTime = setInterval(function () {
                    $.ajax({
                        url: './logSize',
                        type: 'POST',
                        dataType: 'json',
                        data: {
                            id: projectInfo.id
                        },
                        success: function (data) {
                            if (200 == data.code) {
                                $("#logSize").html(data.data);
                            } else {
                                layer.msg(data.msg);
                            }
                        },
                        error: function () {
                            loopLog = false;
                            clearInterval(loopLogTime);
                            layer.alert("日志监听失败");
                        }
                    });
                }, 30000)
            #end
        }

        $('#export').on('click', function () {
            location.href = "export.html?id=" + projectInfo.id;
        });
    }
</script>
</html>