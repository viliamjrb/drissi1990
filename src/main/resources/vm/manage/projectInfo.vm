<!DOCTYPE html>
<html>

<head>
    #parse("./common/head.vm")
    <title>项目管理系统</title>
    <link rel="stylesheet" href="/static/css/manage/projectInfo.css" media="all">
</head>

<body>
<div class="layui-row">
    <button id="addProject" class="layui-btn layui-btn-sm">新增项目</button>
    <button id="refresh" class="layui-btn layui-btn-sm">刷新表格</button>

</div>
<table class="layui-table" id="tab_project" lay-filter="tab_project" style="margin: 0;"></table>

</body>

<script type="text/html" id="bar_projects">
    <a href="javascript:;" class="layui-btn  layui-btn-sm layui-btn-normal" lay-event="manage">控制台</a>
    <a href="javascript:;" class="layui-btn  layui-btn-sm layui-btn-warm" lay-event="update">配置</a>
    <a href="javascript:;" class="layui-btn  layui-btn-sm layui-btn" lay-event="file">文件</a>
    <a href="javascript:;" class="layui-btn  layui-btn-sm layui-btn" lay-event="build">构建</a>
    <a href="javascript:;" class="layui-btn  layui-btn-sm layui-btn" lay-event="ram">监控</a>
    <a href="javascript:;" class="layui-btn  layui-btn-sm layui-btn" lay-event="port">端口</a>
</script>
<script type="text/html" id="status_templ">
    <input type="checkbox" id="" disabled name="status" {{# if(d.status){ }} checked {{# } }} lay-skin="switch"
           lay-text="运行中|未运行">
</script>

<script>
    const HSL = [];

    function randomHsl() {
        var H = Math.random();
        var S = Math.random();
        var L = Math.random();
        return [H, S, L];
    }

    // 获取HSL数组
    function getHslArray(hslLength) {
        var allLen = HSL.length;
        if (HSL.length >= hslLength) {
            return;
        }
        for (var i = 0; i < hslLength - allLen; i++) {
            var ret = this.randomHsl();

            // 颜色相邻颜色差异须大于 0.25
            if (allLen > 0 && Math.abs(ret[0] - HSL[allLen - 1][0]) < 0.25) {
                i--;
                continue; // 重新获取随机色
            }
            ret[1] = 0.7 + (ret[1] * 0.2); // [0.7 - 0.9] 排除过灰颜色
            ret[2] = 0.4 + (ret[2] * 0.4); // [0.4 - 0.8] 排除过亮过暗色

            // 数据转化到小数点后两位
            ret = ret.map(function (item) {
                return parseFloat(item.toFixed(2));
            });
            HSL.push(ret);
        }
    }

    function hslToRgb(H, S, L) {
        var R, G, B;
        if (+S === 0) {
            R = G = B = L; // 饱和度为0 为灰色
        } else {
            var hue2Rgb = function (p, q, t) {
                if (t < 0) t += 1;
                if (t > 1) t -= 1;
                if (t < 1 / 6) return p + (q - p) * 6 * t;
                if (t < 1 / 2) return q;
                if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;
                return p;
            };
            var Q = L < 0.5 ? L * (1 + S) : L + S - L * S;
            var P = 2 * L - Q;
            R = hue2Rgb(P, Q, H + 1 / 3);
            G = hue2Rgb(P, Q, H);
            B = hue2Rgb(P, Q, H - 1 / 3);
        }
        return [Math.round(R * 255), Math.round(G * 255), Math.round(B * 255)];
    }
</script>

<script type="text/javascript">
    var table;
    var groupMap = new Map();
    layui.use(['layer', 'element', 'table', 'form'], function () {
        var $ = layui.$;
        table = layui.table;
        var form = layui.form;
        var layer = layui.layer;

        table.render({
            id: 'table_project',
            elem: '#tab_project',
            url: '/manage/getProjectInfo',
            height: 'full-52',
            even: true,
            cols: [[
                {field: 'name', title: '项目名称', width: '15%'},
                {
                    title: 'lib状态', width: '10%', templet: function (d) {
                        var rgb;
                        if (d.group) {
                            var size = groupMap.size;
                            if (!groupMap.get(d.group)) {
                                groupMap.set(d.group, "1");
                                size += 1;
                                getHslArray(size);
                            }
                            rgb = hslToRgb.apply(this, HSL[size - 1]);
                        }
                        if (!d.manager) {
                            rgb = [211, 211, 211];
                        }
                        return "<div  name='" + d.id + "' title='" + d.group + "(" + d.id + ")' style='background: rgb(" + rgb + ");color: #fff;margin: 0 -15px;padding: 0 15px;'>" + (d.runLibDesc || "") + " / " + (d.useLibDesc || "") + "</div>";
                    }
                },
                {field: 'createTime', title: '创建时间', width: '13%'},
                {field: 'modifyTime', title: '修改时间', width: '13%'},
                {title: '运行状态', templet: "#status_templ", width: '10%'},
                {field: 'op', title: '操作', toolbar: '#bar_projects'}
            ]],
            loading: true,
            response: {
                statusCode: 200
            },
            done: function (data) {
                var projects = data.data;
                for (var i = 0; i < projects.length; i++) {
                    var project = projects[i];
                    if (!project.manager) {
                        $('tr[data-index="' + i + '"').css('background-color', 'rgb(211,211,211)');
                    }
                }
            }
        });

        // '刷新表格'点击事件
        $('#refresh').on('click', function () {
            reloadTable();
        });


        // '添加项目'点击事件
        $('#addProject').on('click', function () {
            editProject("");
        });

        function editProject(id) {
            layer.open({
                type: 2,
                title: '管理项目配置信息',
                shade: 0.8,
                area: ['80%', '90%'],
                content: 'editProject?id=' + id
            });
        }

        // 表格工具条事件
        table.on('tool(tab_project)', function (obj) {
            var data = obj.data;
            var event = obj.event;
            if ('update' === event) {
                editProject(data.id);
            } else if ('manage' === event) {
                // 管理
                manageApplication(data);
            } else if ('file' === event) {
                fileManage(data);
            } else if ('build' === event) {
                layer.open({
                    type: 2,
                    title: '自动构建',
                    shade: 0.8,
                    area: ['80%', '90%'],
                    content: 'build?id=' + data.id
                });
            } else if ('ram' === event) {
                layer.open({
                    type: 2,
                    title: '内存',
                    shade: 0.8,
                    area: ['60%', '50%'],
                    content: 'internal?tag=' + data.id
                });
            } else if ('port' === event) {
                if (!data.status) {
                    layer.msg('请先运行程序！');
                    return;
                }
                layer.open({
                    type: 2,
                    title: '端口',
                    shade: 0.8,
                    area: ['60%', '50%'],
                    content: 'port?tag=' + data.id
                });
            }
        });

        // 文件管理
        function fileManage(data) {
            var manager = data.manager;
            if (manager) {
                var lay_id = 'tab_file_' + data.id;
                var url = '/file/filemanage?id=' + data.id;
                tabChange({
                    id: data.id,
                    url: url,
                    title: data.id + ' - 文件',
                });
            } else {
                layer.msg('你还没有对应权限！');
            }
        }

        // 管理
        function manageApplication(data) {
            var url = '/manage/console?id=' + data.id;
            tabChange({
                id: data.id,
                url: url,
                title: data.id + ' - 管理',
            });
        }
    });

    function reloadTable() {
        table.reload('table_project', {
            height: 'full-52'
        });
    }
</script>
</html>